diff --git a/scripts/evaluation.py b/scripts/evaluation.py
index e688d28..321b6b4 100644
--- a/scripts/evaluation.py
+++ b/scripts/evaluation.py
@@ -86,7 +86,9 @@ def evaluate(
 
             writer.add_scalar('reward', reward, t)
             writer.add_scalar('total_reward', total_reward, t)
-            writer.add_scalar('score', score, t)
+            writer.add_scalar('as', score, t)
+
+            import pdb; pdb.set_trace()
 
         # visualization
         if render and (t % args.vis_freq == 0 or terminal or t == T):
diff --git a/scripts/plan.py b/scripts/plan.py
index 95ddd44..a5bcd00 100644
--- a/scripts/plan.py
+++ b/scripts/plan.py
@@ -25,6 +25,7 @@ args = Parser().parse_args('plan')
 loadpath = args.gpt_loadpath if args.model == "gpt" else args.retnet_loadpath
 args.exp_name = args.gpt_exp_name if args.model == "gpt" else args.retnet_exp_name
 
+
 dataset = utils.load_from_config(args.logbase, args.dataset, loadpath,
         'data_config.pkl')
 
diff --git a/trajectory/utils/serialization.py b/trajectory/utils/serialization.py
index f8b4db2..40edd3b 100644
--- a/trajectory/utils/serialization.py
+++ b/trajectory/utils/serialization.py
@@ -41,14 +41,20 @@ def load_model(*loadpath, epoch=None, device='cuda:0'):
     """
     Load a model from a directory of saved states.
     """
-    loadpath = os.path.join(*loadpath)
-    config_path = os.path.join(loadpath, 'model_config.pkl')
-
-    if epoch is 'latest':
-        epoch = get_latest_epoch(loadpath)
+    import pdb; pdb.set_trace()
+    loadpath_all = os.path.join(*loadpath)
+    config_path = os.path.join(loadpath_all, 'model_config.pkl')
+    if not os.path.isfile(config_path):
+        loadpath_all = os.path.join(*loadpath[:-1])
+        loadpath_all = os.path.join(loadpath_all, os.listdir(loadpath_all)[-1])
+        loadpath_all = os.path.join(loadpath_all, loadpath[-1])
+        config_path = os.path.join(loadpath_all, 'model_config.pkl')
+
+    if epoch == 'latest':
+        epoch = get_latest_epoch(loadpath_all)
 
     print(f'[ utils/serialization ] Loading model epoch: {epoch}')
-    state_path = os.path.join(loadpath, f'state_{epoch}.pt')
+    state_path = os.path.join(loadpath_all, f'state_{epoch}.pt')
 
     config = pickle.load(open(config_path, 'rb'))
     state = torch.load(state_path)
@@ -67,9 +73,13 @@ def load_config(*loadpath):
     """
     Load a config from a pickle file.
     """
-    loadpath = os.path.join(*loadpath)
-    config = pickle.load(open(loadpath, 'rb'))
-    print(f'[ utils/serialization ] Loaded config from {loadpath}')
+    loadpath_all = os.path.join(*loadpath)
+    if not os.path.isfile(loadpath_all):
+        loadpath_all = os.path.join(*loadpath[:-1])
+        loadpath_all = os.path.join(loadpath_all, os.listdir(loadpath_all)[-1])
+        loadpath_all = os.path.join(loadpath_all, loadpath[-1])
+    config = pickle.load(open(loadpath_all, 'rb'))
+    print(f'[ utils/serialization ] Loaded config from {loadpath_all}')
     print(config)
     return config
 