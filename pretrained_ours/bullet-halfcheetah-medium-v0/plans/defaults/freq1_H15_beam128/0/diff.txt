diff --git a/scripts/plan.py b/scripts/plan.py
index afa3492..b78573a 100644
--- a/scripts/plan.py
+++ b/scripts/plan.py
@@ -41,7 +41,7 @@ model, model_epoch = utils.load_model(args.logbase, args.dataset, loadpath,
 #######################
 
 env = datasets.load_environment(args.dataset)
-# renderer = utils.make_renderer(args)
+renderer = utils.make_renderer(args)
 timer = utils.timer.Timer()
 
 discretizer = dataset.discretizer
@@ -113,14 +113,14 @@ for t in range(T):
     writer.add_scalar('total_reward', total_reward, t)
     writer.add_scalar('score', score, t)
 
-    ## visualization
-    # if t % args.vis_freq == 0 or terminal or t == T:
+    # visualization
+    if t % args.vis_freq == 0 or terminal or t == T:
 
-        ## save current plan
-        # renderer.render_plan(join(args.savepath, f'{t}_plan.mp4'), sequence_recon, env.state_vector())
+        # save current plan
+        renderer.render_plan(join(args.savepath, f'{t}_plan.mp4'), sequence_recon, env.state_vector())
 
-        ## save rollout thus far
-        # renderer.render_rollout(join(args.savepath, f'rollout.mp4'), rollout, fps=80)
+        # save rollout thus far
+        renderer.render_rollout(join(args.savepath, f'rollout.mp4'), rollout, fps=80)
 
     if terminal: break
 
diff --git a/trajectory/search/core.py b/trajectory/search/core.py
index 09ec45a..56f9472 100644
--- a/trajectory/search/core.py
+++ b/trajectory/search/core.py
@@ -20,6 +20,7 @@ def beam_plan(
     '''
         x : tensor[ 1 x input_sequence_length ]
     '''
+    import pdb; pdb.set_trace()
 
     inp = x.clone()
 
@@ -85,7 +86,6 @@ def beam_plan(
         })
 
     progress.stamp()
-
     ## [ batch_size x (n_context + n_steps) x transition_dim ]
     x = x.view(beam_width, -1, transition_dim)
 